<div class="drag-container"></div>
<div class="board">
  <div class="board-column todo">
    <div class="board-column-container">
      <div class="board-column-header">Todo</div>
      <div class="board-column-content-wrapper">
        <div class="board-column-content">
          <% for(var i = 0; i < project.task.length; i++) {%>
            <% if(project.task[i].etat == "TODO") { %>
              <%- include("taskItem",{i: i, taskId: project.task[i].id, state: 'TODO', projectId: project._id})%>
            <% } %>
          <% } %>
        </div>
      </div>
    </div>
  </div>
  <div class="board-column working">
    <div class="board-column-container">
      <div class="board-column-header">DOING</div>
      <div class="board-column-content-wrapper">
        <div class="board-column-content">
          <% for(var i = 0; i < project.task.length; i++) {%>
            <% if(project.task[i].etat == "DOING") { %>
              <%- include("taskItem",{i: i, taskId: project.task[i].id, state: 'DOING'})%>
            <% } %>
          <% } %>
        </div>
      </div>
    </div>
  </div>
  <div class="board-column testing">
    <div class="board-column-container">
      <div class="board-column-header">REVIEWING-TESTING</div>
      <div class="board-column-content-wrapper">
        <div class="board-column-content">
          <% for(var i = 0; i < project.task.length; i++) {%>
            <% if(project.task[i].etat == "REVIEWING-TESTING") { %>
              <%- include("taskItem",{i: i, taskId: project.task[i].id, state: 'REVIEWING-TESTING'})%>
            <% } %>
          <% } %>
        </div>
      </div>
    </div>
  </div>
  <div class="board-column done">
    <div class="board-column-container">
      <div class="board-column-header">DONE</div>
      <div class="board-column-content-wrapper">
        <div class="board-column-content">
          <% for(var i = 0; i < project.task.length; i++) {%>
            <% if(project.task[i].etat == "DONE") { %>
              <%- include("taskItem",{i: i, taskId: project.task[i].id, state: 'DONE'})%>
            <% } %>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>
<% for(var i = 0; i < project.task.length; i++) {%>
  <%- include("infoTaskModal",{i: i, project: project})%>
<% } %>


<script>

  function getTaskId(item) {
    return item._element.childNodes[1].children[0].children[0].children[0].id
  }

  function getColumnName(item) {
    return item.getGrid().getElement().parentNode.parentNode.children[0].innerText
  }


  var dragContainer = document.querySelector(".drag-container");
  var itemContainers = [].slice.call(
    document.querySelectorAll(".board-column-content")
  );
  var columnGrids = []
  var boardGrid

  let startItem

  
  // Init the column grids so we can drag those items around.
  itemContainers.forEach(function (container) {
    var grid = new Muuri(container, {
      items: ".board-item",
      dragRelease:{
        duration: 300
      },
      dragEnabled: true,
      dragSort: function () {
        return columnGrids;
      },
     
      dragAutoScroll: {
        targets: (item) => {
          return [
            { element: window, priority: 0 },
            { element: item.getGrid().getElement().parentNode, priority: 1 },
          ];
        },
      },
    })
    
      .on("dragInit", function (item) {
        item.getElement().style.width = item.getWidth() + "px";
        item.getElement().style.height = item.getHeight() + "px";
      })
      .on("dragReleaseEnd", function (item) {
        item.getElement().style.width = "";
        item.getElement().style.height = "";
        item.getGrid().refreshItems([item]);
        let taskPos = getTaskId(item)
        let state = getColumnName(item)
        let redirection = window.location.pathname + "/" + taskPos + "/updateState/" + state
        //window.location.replace(redirection);
        


      })
      .on("layoutStart", function () {
        boardGrid.refreshItems().layout();
      });
     
    columnGrids.push(grid);
  });

  // Init board grid so we can drag those columns around.
  boardGrid = new Muuri(".board", {
    dragEnabled: true,
    dragHandle: ".board-column-header",
  });

  
</script>
